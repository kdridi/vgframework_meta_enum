#pragma once

// Bindless resource ranges (must be litteral constants)
#define BINDLESS_TEXTURE_START      0       // [0..16383]       (14 bits)
#define BINDLESS_BUFFER_START       16384   // [16384..32767]   (14 bits)
#define BINDLESS_RWTEXTURE_START    32768   // [32768..40959]   (13 bits)
#define BINDLESS_RWBUFFER_START     40960   // [40960..49151]   (13 bits)
#define BINDLESS_TLAS_START         49152   // [49152..49167]   (4 bits)

#define BINDLESS_TABLE_RANGE_MIN    0
#define BINDLESS_TABLE_RANGE_MAX    49168
#define BINDLESS_TABLE_SIZE         (BINDLESS_TABLE_RANGE_MAX-BINDLESS_TABLE_RANGE_MIN)

#define  BINDLESS_TEXTURE_COUNT      (BINDLESS_BUFFER_START - BINDLESS_TABLE_RANGE_MIN)
#define  BINDLESS_TEXTURE_INVALID    (BINDLESS_TEXTURE_START + BINDLESS_TEXTURE_COUNT - 1)
#define  BINDLESS_TEXTURE_BINDING    0

#define  BINDLESS_BUFFER_COUNT      (BINDLESS_RWTEXTURE_START - BINDLESS_BUFFER_START)
#define  BINDLESS_BUFFER_INVALID    (BINDLESS_BUFFER_START + BINDLESS_BUFFER_COUNT - 1)
#define  BINDLESS_BUFFER_BINDING    1

#define  BINDLESS_RWTEXTURE_COUNT   (BINDLESS_RWBUFFER_START - BINDLESS_RWTEXTURE_START)
#define  BINDLESS_RWTEXTURE_INVALID (BINDLESS_RWTEXTURE_START + BINDLESS_RWTEXTURE_COUNT - 1)
#define  BINDLESS_RWTEXTURE_BINDING 2

#define  BINDLESS_RWBUFFER_COUNT    (BINDLESS_TLAS_START - BINDLESS_RWBUFFER_START)
#define  BINDLESS_RWBUFFER_INVALID  (BINDLESS_RWBUFFER_START + BINDLESS_RWBUFFER_COUNT - 1)
#define  BINDLESS_RWBUFFER_BINDING  3

#define  BINDLESS_TLAS_COUNT        (BINDLESS_TABLE_RANGE_MAX - BINDLESS_TLAS_START)
#define  BINDLESS_TLAS_INVALID      (BINDLESS_TLAS_START + BINDLESS_TLAS_COUNT - 1)
#define  BINDLESS_TLAS_BINDING      4

// Allocate fixed Textures/Buffers SRVs/UAVs slots top-down (dynamic slots are allocated bottom-up)

// Texture SRV
#define RESERVEDSLOT_TEXSRV_IMGUIFONTTEX        (BINDLESS_TEXTURE_INVALID - 1)

// Buffer SRV
#define RESERVEDSLOT_BUFSRV_VIEWCONSTANTS       (BINDLESS_BUFFER_INVALID - 1)
#define RESERVEDSLOT_BUFSRV_SKINNINGMATRICES    (BINDLESS_BUFFER_INVALID - 2)

#ifdef VG_DX12

// DX12 requires aliasing texture types to use different spaces

#define BINDLESS_TEXTURE_BINDING_1D              10  
#define BINDLESS_TEXTURE_BINDING_2D              20  
#define BINDLESS_TEXTURE_BINDING_2D_UINT2        21  
#define BINDLESS_TEXTURE_BINDING_3D              30  

#define BINDLESS_RWTEXTURE_BINDING_1D           110 
#define BINDLESS_RWTEXTURE_BINDING_2D           120 
#define BINDLESS_RWTEXTURE_BINDING_3D           130 

#elif defined(VG_VULKAN)

#define BINDLESS_TEXTURE_BINDING_1D               0 // <=> BINDLESS_TEXTURE_BINDING
#define BINDLESS_TEXTURE_BINDING_2D               0   
#define BINDLESS_TEXTURE_BINDING_2D_UINT2         0   
#define BINDLESS_TEXTURE_BINDING_3D               0   

#define BINDLESS_RWTEXTURE_BINDING_1D             2 // <=> BINDLESS_RWTEXTURE_BINDING
#define BINDLESS_RWTEXTURE_BINDING_2D             2 
#define BINDLESS_RWTEXTURE_BINDING_2D_UINT2       2 
#define BINDLESS_RWTEXTURE_BINDING_3D             2 
#endif